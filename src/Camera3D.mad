import type { Vector3 } from "./Math"



// typedef struct Camera3D {
//   Vector3 position;       // Camera position
//   Vector3 target;         // Camera target it looks-at
//   Vector3 up;             // Camera up vector (rotation over its axis)
//   float fovy;             // Camera field-of-view aperture in Y (degrees) in perspective, used as near plane width in orthographic
//   int projection;         // Camera projection: CAMERA_PERSPECTIVE or CAMERA_ORTHOGRAPHIC
// } Camera3D;
export alias Camera3D = {
  fovy :: Float,
  position :: Vector3,
  projection :: Short,
  target :: Vector3,
  up :: Vector3,
}

begin3DMode :: Camera3D -> {}
export begin3DMode = extern "madraylib__camera3d__begin3DMode"

end3DMode :: {} -> {}
export end3DMode = extern "madraylib__camera3d__endMode3D"
