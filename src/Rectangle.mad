import type { Color } from "./Color"
import type { Vector2 } from "./Math"



// Rectangle, 4 components
// typedef struct Rectangle {
//     float x;                // Rectangle top-left corner position x
//     float y;                // Rectangle top-left corner position y
//     float width;            // Rectangle width
//     float height;           // Rectangle height
// } Rectangle;
export alias Rectangle = { height :: Float, width :: Float, x :: Float, y :: Float }

draw :: Float -> Float -> Float -> Float -> Color -> {}
export draw = extern "madraylib__rectangle__draw"

drawV :: Vector2 -> Vector2 -> Color -> {}
export drawV = extern "madraylib__rectangle__drawV"

drawPro :: Rectangle -> Vector2 -> Float -> Color -> {}
export drawPro = extern "madraylib__rectangle__drawPro"

drawRec :: Rectangle -> Color -> {}
export drawRec = extern "madraylib__rectangle__drawRectangleRec"
